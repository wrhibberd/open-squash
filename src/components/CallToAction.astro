---
import type { ImageMetadata } from "astro";
import { Picture } from "astro:assets";

interface Props {
	image: {
		file: ImageMetadata;
		alt: string;
		position: string;
	};
	theme?: "red" | "blue";
	position?: "left" | "right";
	textSize?: "small" | "large";
	text: string;
	links: {
		url: string;
		text: string;
		external?: boolean;
		style?: string;
	}[];
}

const gradStyles = {
	red: "bg-gradient-to-r from-red/0 to-red/100",
	blue: "bg-gradient-to-r from-blue/100 to-blue/0",
};
const boxStyles = {
	red: "border-red border bg-white text-red",
	blue: "border-blue border bg-blue-light text-blue",
};

const {
	image,
	theme = "blue",
	position = "left",
	textSize = "small",
	text,
	links,
} = Astro.props as Props;
---

<section
	class:list={[
		"min-h-[500px] relative p-20 sm:p-40 flex items-end sm:items-stretch border-t",
		position === "left" && "justify-start",
		position === "right" && "justify-end",
	]}
>
	<div class:list={["absolute inset-0", `${gradStyles[theme]}`]}></div>
	<Picture
		src={image.file}
		alt={image.alt}
		widths={[400, 800, 1200, 1600]}
		formats={["webp", "avif"]}
		fallbackFormat="jpg"
		pictureAttributes={{
			class: "absolute inset-0 w-full h-full mix-blend-multiply",
		}}
		class:list={["w-full h-full object-cover", image.position]}
	/>
	<div
		class:list={[
			"sm:w-2/3 lg:w-5/12 p-20 sm:min-h-full flex flex-col justify-between relative rounded-lg",
			`${boxStyles[theme]}`,
		]}
	>
		<h2
			class:list={[
				textSize === "small" && "text-heading-sm sm:text-heading",
				textSize === "large" && "text-heading sm:text-heading-md",
			]}
		>
			{text}
		</h2>

		<div class="flex flex-wrap -m-10 pt-40">
			{
				links.map((link) => (
					<a
						href={link.url}
						target={link.external ? "_blank" : "_self"}
						class:list={[
							"m-10 transition-colors border rounded-lg px-20 py-10 font-bold",
							link.style,
						]}
					>
						{link.text}
					</a>
				))
			}
		</div>
	</div>
</section>
